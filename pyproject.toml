[tool.poetry]
name = "cp-problem-maker"
version = "0.1.0"
description = ""
authors = ["suisen-cp <suisen.13107f4@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "cp_problem_maker", from = "src" }]

[tool.poetry.scripts]
cp-problem-maker = "cp_problem_maker.main:main"

[tool.poetry.dependencies]
python = "^3.12"
pydantic = "^2.9.2"
pyyaml = "^6.0.2"
toml = "^0.10.2"
colorlog = "^6.8.2"
psutil = "^6.1.1"


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
mypy = "^1.11.2"
ruff = "^0.6.9"
pytest-mock = "^3.14.0"
types-pyyaml = "^6.0.12.20240917"
types-toml = "^0.10.8.20240310"
types-psutil = "^6.1.0.20241221"

[tool.ruff.lint]
select = [
    # see https://docs.astral.sh/ruff/rules/ for details
    "E",
    "W",
    "F",
    "A",
    "B",
    "I",
    "G",
    "PTH",
    "FIX",
    "ERA",
]

[tool.mypy]
strict = true
check_untyped_defs = true
no_implicit_optional = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

plugins = "pydantic.mypy"

[[tool.mypy.overrides]]
module = "cp_problem_maker.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
pythonpath = ["src"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
